{"componentChunkName":"component---src-templates-blog-post-js","path":"/TypeScript/Object Types/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"1886a1ea-892a-576a-94c9-31c3a87b5d1d","excerpt":"공식문서 읽다가 타입스크립트를 사용하면서 잘 안쓰던 것들, 주의할 점들 위주로 적어봅니다. Setting defaults xPos, yPos에 값이 할당되지 않으면 0으로 초기화된다. 아래와 같이 쓰고 싶은 욕구가 들 때가 있으나 안 된다. 타입지정과 초기값 할당을 한 번에 할 수 없다. JavaScript 는 객체프로퍼티에 다음과 같이 {property : something} 을 사용하면 “property의 변수명을 something…","html":"<blockquote>\n<p>공식문서 읽다가 타입스크립트를 사용하면서 잘 안쓰던 것들, 주의할 점들 위주로 적어봅니다.</p>\n</blockquote>\n  <br />\n<h2 id=\"setting-defaults\" style=\"position:relative;\"><a href=\"#setting-defaults\" aria-label=\"setting defaults permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting defaults</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">PaintOptions</span> <span class=\"token punctuation\">{</span>\n  shape<span class=\"token operator\">:</span> Shape<span class=\"token punctuation\">;</span>\n  xPos<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  yPos<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">paintShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> shape<span class=\"token punctuation\">,</span> xPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> yPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> PaintOptions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>xPos, yPos에 값이 할당되지 않으면 0으로 초기화된다.</p>\n<br />\n</li>\n</ul>\n<p>아래와 같이 쓰고 싶은 욕구가 들 때가 있으나 안 된다.</p>\n<ul>\n<li>타입지정과 초기값 할당을 한 번에 할 수 없다.</li>\n<li>JavaScript 는 객체프로퍼티에 다음과 같이 {property : something} 을 사용하면 “property의 변수명을 something 변수명으로 바꿔서 사용하는군요!” 라고 알아듣는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> shape<span class=\"token operator\">:</span> Shape<span class=\"token punctuation\">,</span> xPos<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>xPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"code-classlanguage-textreadonlycodeproperties\" style=\"position:relative;\"><a href=\"#code-classlanguage-textreadonlycodeproperties\" aria-label=\"code classlanguage textreadonlycodeproperties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">readonly</code>  Properties</h2>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Home</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">readonly</span> resident<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> age<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">visitForBirthday</span><span class=\"token punctuation\">(</span>home<span class=\"token operator\">:</span> Home<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  home<span class=\"token punctuation\">.</span>resident<span class=\"token punctuation\">.</span>age<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ✅ readonly 인데 가능하다 !!</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">evict</span><span class=\"token punctuation\">(</span>home<span class=\"token operator\">:</span> Home<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  home<span class=\"token punctuation\">.</span>resident <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ❌ error: readonly 기 때문에 안 된다.</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Victor the Evictor'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"index-signatures\" style=\"position:relative;\"><a href=\"#index-signatures\" aria-label=\"index signatures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Index Signatures</h2>\n<p>프로퍼티명은 모르지만 미리 타입을 지정하고 싶을 경우 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">StringArray</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> myArray<span class=\"token operator\">:</span> StringArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'mine'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>문제 ) myItem의 타입은?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const myItem = myArray[0];</code></pre></div>\n<p>답) string</p>\n<p>🚩 주의할 점</p>\n<ol>\n<li>Index signature 프로퍼티 타입은 무조건 string이나 number여야 한다.  <br>\n- 당연하게도 객체의 프로퍼티타입이 객체이거나 배열일 수 없다.</li>\n<li>\n<p>모든 객체의 value type이 같아야 한다.<br>\n- 아래코드의 경우 TypeScript는 “프로퍼티명이 name인 것만 string타입을 받을거야!” 라는 계산을 하지 못한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">NumberDictionary</span> <span class=\"token punctuation\">{</span>\n <span class=\"token punctuation\">[</span>index<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n length<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ok</span>\n name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ❌error: Property 'name' of type 'string' is not assignable to 'string' index type 'number'</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h2 id=\"generic-object-types\" style=\"position:relative;\"><a href=\"#generic-object-types\" aria-label=\"generic object types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic Object Types</h2>\n<p>다음 예제코드를 읽어보자</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">OrNull<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Type <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OneOrMany<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> Type <span class=\"token operator\">|</span> Type<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OneOrManyOrNull<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> OrNull<span class=\"token operator\">&lt;</span>OneOrMany<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OneOrManyOrNull<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span></span> <span class=\"token operator\">=</span> OneOrMany<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OneOrManyOrNullStrings</span> <span class=\"token operator\">=</span> OneOrManyOrNull<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">OneOrManyOrNullStrings</span> <span class=\"token operator\">=</span> OneOrMany<span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"tuple-types\" style=\"position:relative;\"><a href=\"#tuple-types\" aria-label=\"tuple types permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tuple Types</h2>\n<p>함수의 파라미터가 배열일 경우에 optional type 깔끔하게 주는 법</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Either2dOr3d</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">number</span><span class=\"token operator\">?</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 끝에 ? 를 붙였다</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">setCoordinate</span><span class=\"token punctuation\">(</span>coord<span class=\"token operator\">:</span> Either2dOr3d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> coord<span class=\"token punctuation\">;</span> <span class=\"token comment\">// const z: number | undefined</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://www.typescriptlang.org/docs/handbook/2/objects.html\">TypeScript 공식문서</a></p>","frontmatter":{"title":"[TypeScript] Object Types","date":"April 17, 2022"}}},"pageContext":{"slug":"/TypeScript/Object Types/","previous":{"fields":{"slug":"/TypeScript/Narrowing - Type guard/"},"frontmatter":{"title":"[TypeScript] Narrowing - Type guard"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}