{"componentChunkName":"component---src-templates-blog-post-js","path":"/Projects/[React] 인스타그램/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"4b28cb38-8842-539f-9048-1fae65710a01","excerpt":"목차 1-1. 로그인 페이지 마크다운 및 로그인 유효성 검사 1-2. 로그인, 회원가입 기능 2-1. 메인페이지 컴포넌트 분리 2-2-1. 메인페이지 Nav.js 2-2-2. 메인페이지 Feed.js 2-3-1. 메인페이지 Article.js 저번주에 자바스크립트로 인스타그램 로그인 페이지와 메인페이지를 구현했는데\n이번주에는 리액트로 구현해보았다 ! HTML/CSS JavaScript(ES6+) React SASS 로그인 id, password…","html":"<blockquote>\n<h3 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>목차</strong></h3>\n<p><a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%801-1\">1-1. 로그인 페이지 마크다운 및 로그인 유효성 검사</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%801-2\">1-2. 로그인, 회원가입 기능</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%802-1\">2-1. 메인페이지 컴포넌트 분리</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%802-2-1\">2-2-1. 메인페이지 Nav.js</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%802-2-2\">2-2-2. 메인페이지 Feed.js</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%802-3-1\">2-3-1. 메인페이지 Article.js</a></p>\n</blockquote>\n<p>저번주에 자바스크립트로 인스타그램 로그인 페이지와 메인페이지를 구현했는데\n이번주에는 리액트로 구현해보았다 !</p>\n<h2 style=\"color:#45963f\">작업기간</h2>\n2021.4.28 ~ 2021.5.6.\n<h2 style=\"color:#45963f\">기술스택</h2>\n<ul>\n<li>HTML/CSS</li>\n<li>JavaScript(ES6+)</li>\n<li>React</li>\n<li>SASS</li>\n</ul>\n<h2 style=\"color:#45963f\">주요 구현사항</h2>\n<ul>\n<li>로그인 id, password 에 특정한 기준이 맞아야 로그인버튼 활성화 기능</li>\n<li>백엔드와 협업해서 회원가입, 로그인 기능 구현 및 localStorage에 토큰 넣어보기</li>\n<li>추가하기 !!</li>\n</ul>\n<h2 style=\"color:#45963f\">구현 화면 및 코드설명</h2>\n<h2 id=\"1-로그인-페이지\" style=\"position:relative;\"><a href=\"#1-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\"1 로그인 페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 로그인 페이지</h2>\n<h3 id=\"인스타1-1\">1-1. 마크다운 및 로그인 유효성 검사</h3>\n<p><img src=\"https://images.velog.io/images/yonyas/post/18f6a734-24f5-4b52-a360-8ca57d859882/instalogin.gif\"></p>\n<p><strong>(1) state 만들기</strong></p>\n<ul>\n<li>input value를 담을 id, pw 를 만들어 주었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Login</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      pw<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>(2) 입력한 내용 input에 반영</strong></p>\n<ul>\n<li>배열 비구조화 할당을 이용해서 input의 name값을 키값으로 넣어주었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onChangeInput</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> value<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>(3) 유효성 검사</strong></p>\n<ul>\n<li>validation 변수를 만들어서 id는 ’@‘를 포함할 때, pw는 5자리 숫자가 넘을 때 버튼이 활성화 되도록 했다.</li>\n<li>render() 아래에 validation 을 넣어야 바로바로 반영이 되었다.</li>\n<li>다른 방법으로는 componentDidUpdate를 사용할 수 있었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> validation <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>pw<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"LoginJY\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>main className<span class=\"token operator\">=</span><span class=\"token string\">\"LoginBox\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"title\"</span><span class=\"token operator\">></span>Westagram<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"login\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>input\n              className<span class=\"token operator\">=</span><span class=\"token string\">\"loginInputs loginId\"</span>\n              name<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span>\n              value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span>\n              onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onChangeInput<span class=\"token punctuation\">}</span>\n              type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n              placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"전화번호, 사용자 이름 또는 이메일\"</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>input\n              className<span class=\"token operator\">=</span><span class=\"token string\">\"loginInputs loginPw\"</span>\n              name<span class=\"token operator\">=</span><span class=\"token string\">\"pw\"</span>\n              value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>pw<span class=\"token punctuation\">}</span>\n              onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onChangeInput<span class=\"token punctuation\">}</span>\n              type<span class=\"token operator\">=</span><span class=\"token string\">\"password\"</span>\n              placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"비밀번호\"</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button\n            className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">loginBtn </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>validation <span class=\"token operator\">?</span> <span class=\"token string\">'blueBackgroundColor'</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span>\n            onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickLoginBtn<span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span><span class=\"token comment\">/*------------------------------------ */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 위 onClickLoginBtn 함수는 아래에서 설명! */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span><span class=\"token comment\">/*------------------------------------ */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n            로그인\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"인스타1-2\">1-2. 로그인, 회원가입 기능</h3>\n<p>백엔드와 처음 협업해보았다 !\n현재 만든 버튼이 로그인버튼 하나이기 때문에 fetch의 API를 login 과 signup 으로 직접 바꿔가면서 실행했다.\nid, pw를 입력하면 백엔드분 화면에서 바로바로 떴는데 신기했다 😃</p>\n<ul>\n<li>백엔드에서 키값을 어떻게 썼는지 파악하는게 중요했다. password로 할 수도 있고 pw로 할 수도 있다.</li>\n<li>로그인이 성공하면 main페이지로 넘어가게 withRouter를 사용했다.</li>\n<li>로그인이 성공하면 localStorage에 토큰을 담아보았다. 나중에 이용자가 로그인한 상태인지 아닌지, 댓글을 달 때 이 사람의 id가 무엇인지 등 파악하는데 토큰이 쓰인다고 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onClickLoginBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://10.58.7.181:8000/user/login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      email<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      password<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>pw<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>message <span class=\"token operator\">===</span> <span class=\"token string\">'SUCCESS'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/mainjy'</span><span class=\"token punctuation\">)</span>\n        localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access-token'</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span><span class=\"token constant\">ACCESS_TOKEN</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"2-메인-페이지\" style=\"position:relative;\"><a href=\"#2-%EB%A9%94%EC%9D%B8-%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\"2 메인 페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 메인 페이지</h2>\n<p><img src=\"https://images.velog.io/images/yonyas/post/781d83c1-91e2-4950-bf62-08c112214a51/instamain.gif\"></p>\n<h3 id=\"인스타2-1\">2-1. 컴포넌트 분리</h3>\n<p>자바스크립트로 장황하게 쓰여있던 코드들을 컴포넌트로 나름 쪼개보았다 !</p>\n<p><img src=\"https://images.velog.io/images/yonyas/post/c9e08430-b329-4de5-bf73-5efd76faa672/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202021-05-14%2008-22-23.png\"></p>\n<ul>\n<li>Nav에서 my Account 버튼을 누르면 아까 로그인 창으로 연동되게 했다.</li>\n<li>Feed.js로 왼쪽부분 큰 틀을 잡고 Article.js 로 구분해서 컴포넌트를 재사용했다.</li>\n<li>Aside도 재사용되는 부분이 있어서 분리해주었다.</li>\n</ul>\n<h3 id=\"2-2-컴포넌트-별-사용한-기능-설명\" style=\"position:relative;\"><a href=\"#2-2-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%B3%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EA%B8%B0%EB%8A%A5-%EC%84%A4%EB%AA%85\" aria-label=\"2 2 컴포넌트 별 사용한 기능 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-2. 컴포넌트 별 사용한 기능 설명</h3>\n<h4 id=\"p-id인스타2-2-11-navjsp\" style=\"position:relative;\"><a href=\"#p-id%EC%9D%B8%EC%8A%A4%ED%83%802-2-11-navjsp\" aria-label=\"p id인스타2 2 11 navjsp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><p id=\"인스타2-2-1\">(1) Nav.js</p></h4>\n<ul>\n<li>withRouter 사용해서 로그인창으로 이동 구현 !</li>\n<li>Router 사용에는 <code class=\"language-text\">&lt;Link></code>컴포넌트 사용과 <code class=\"language-text\">withRouterHOC</code>의 두가지 방법이 있다.</li>\n<li>withRouter 는 복잡해보이지만 조건을 걸 때 용이하다. 예를 들어 로그인 성공시 로그인 화면으로 가는 것!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./Nav.scss'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Nav</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      navLink<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          imgAlt<span class=\"token operator\">:</span> <span class=\"token string\">'추천하는 사람들'</span><span class=\"token punctuation\">,</span>\n          imgSrc<span class=\"token operator\">:</span>\n            <span class=\"token string\">'https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/bearu/explore.png'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n          imgAlt<span class=\"token operator\">:</span> <span class=\"token string\">'새롭게 나를 팔로우한 사람들'</span><span class=\"token punctuation\">,</span>\n          imgSrc<span class=\"token operator\">:</span>\n            <span class=\"token string\">'https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/bearu/heart.png'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          imgAlt<span class=\"token operator\">:</span> <span class=\"token string\">'내 계정'</span><span class=\"token punctuation\">,</span>\n          imgSrc<span class=\"token operator\">:</span>\n            <span class=\"token string\">'https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/bearu/profile.png'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">goToMain</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/loginjy'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>nav className<span class=\"token operator\">=</span><span class=\"token string\">\"Nav\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>a className<span class=\"token operator\">=</span><span class=\"token string\">\"navLogo\"</span> href<span class=\"token operator\">=</span><span class=\"token string\">\"main.html\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token string\">\"위스타그램 로고\"</span> src<span class=\"token operator\">=</span><span class=\"token string\">\"/images/leejiyon/instagram.png\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"navLogoTitle\"</span><span class=\"token operator\">></span>Westagram<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"navSearchWrap\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>input className<span class=\"token operator\">=</span><span class=\"token string\">\"navSearch\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"검색\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul className<span class=\"token operator\">=</span><span class=\"token string\">\"navLink\"</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>navLink<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">link</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>link<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>link<span class=\"token punctuation\">.</span>imgAlt<span class=\"token punctuation\">}</span> src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>link<span class=\"token punctuation\">.</span>imgSrc<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nav<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Nav<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"p-id인스타2-2-22-feedjsp\" style=\"position:relative;\"><a href=\"#p-id%EC%9D%B8%EC%8A%A4%ED%83%802-2-22-feedjsp\" aria-label=\"p id인스타2 2 22 feedjsp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><p id=\"인스타2-2-2\">(2) Feed.js</p></h4>\n<ul>\n<li>목데이터를 사용해보았다 !</li>\n<li>나중에는 백에서 어떤 형식으로 줄지 잘 상의하면서 해야겠지 요 .. ?</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"header\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"headerId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jiyon\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"alt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"하오 이미지\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"className\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"profileImg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/leejiyon/hao.jpg\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"articleImg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"alt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"산 정상\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"className\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"articleImg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/leejiyon/nature.jpg\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"myComment\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"백두산 정상\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"header\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"headerId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dongseok\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"alt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"전동석 이미지\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"className\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"profileImg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/images/leejiyon/dongseok.jpg\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"articleImg\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"alt\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"아이유\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"className\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"articleImg\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"images/leejiyon/iu.jpg\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"myComment\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"아이유 안녕\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>아래는 목데이터 받아서 state 에 저장시키는 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Feeds</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    articleList<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:3000/data/leejiyon/articledata.json'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">articleData</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          articleList<span class=\"token operator\">:</span> articleData<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"p-id인스타2-3-13-1-articlejs---데이터-키값-id-를-ref로-사용p\" style=\"position:relative;\"><a href=\"#p-id%EC%9D%B8%EC%8A%A4%ED%83%802-3-13-1-articlejs---%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%82%A4%EA%B0%92-id-%EB%A5%BC-ref%EB%A1%9C-%EC%82%AC%EC%9A%A9p\" aria-label=\"p id인스타2 3 13 1 articlejs   데이터 키값 id 를 ref로 사용p permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><p id=\"인스타2-3-1\">(3-1) Article.js - 데이터 키값 id 를 ref로 사용</p></h4>\n<ul>\n<li>댓글리스트 id를 state 에 담지 말고 ref 로 따로 빼서 렌더링 되지 않게 하기</li>\n<li>현재 댓글데이터가 3개 있어서 현재 current를 4로 넣어주었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>댓글이 달리면 idRef를 ++해서 적용시켜주었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prevProps<span class=\"token punctuation\">,</span> prevState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prevState<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idRef<span class=\"token punctuation\">.</span>current <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">onClickPostBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>commentInputValue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      userComments<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n          id<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>idRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">,</span>\n          userId<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>currentUser<span class=\"token punctuation\">,</span>\n          comment<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>commentInputValue<span class=\"token punctuation\">,</span>\n          showTrashBtn<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      commentInputValue<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inputRef<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>hooks를 사용하면 useCallback으로 묶으면 편한 것 같은데 클래스컴포넌트로 구현할 때 ref를 이렇게 다루는 것은 복잡했다. (쉬운 방법이 있을 수 있지만 ..!)</li>\n</ul>\n<h4 id=\"p3-2-articlejs---댓글-각각-좋아요-삭제-누르기p\" style=\"position:relative;\"><a href=\"#p3-2-articlejs---%EB%8C%93%EA%B8%80-%EA%B0%81%EA%B0%81-%EC%A2%8B%EC%95%84%EC%9A%94-%EC%82%AD%EC%A0%9C-%EB%88%84%EB%A5%B4%EA%B8%B0p\" aria-label=\"p3 2 articlejs   댓글 각각 좋아요 삭제 누르기p permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><p>(3-2) Article.js - 댓글 각각 좋아요 삭제 누르기</p></h4>\n<ul>\n<li>댓글의 좋아요나 삭제를 누르면 id값을 이용해서 상태를 변경했다.</li>\n<li>수정한 코드는 map으로 돌려서 클릭한 댓글의 liked상태를 변화시키고 안클릭한 댓글은 그대로 두고 setState를 했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ------------ 현재 userComments의 구조 --------------</span>\n  userComments<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        userId<span class=\"token operator\">:</span> <span class=\"token string\">'iu'</span><span class=\"token punctuation\">,</span>\n        comment<span class=\"token operator\">:</span> <span class=\"token string\">'아자아자'</span><span class=\"token punctuation\">,</span>\n        showTrashBtn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        liked<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        userId<span class=\"token operator\">:</span> <span class=\"token string\">'jiyon'</span><span class=\"token punctuation\">,</span>\n        comment<span class=\"token operator\">:</span> <span class=\"token string\">'공부를 하자'</span><span class=\"token punctuation\">,</span>\n        showTrashBtn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        liked<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n        userId<span class=\"token operator\">:</span> <span class=\"token string\">'Shaman_king'</span><span class=\"token punctuation\">,</span>\n        comment<span class=\"token operator\">:</span> <span class=\"token string\">'벨로그 쓰기'</span><span class=\"token punctuation\">,</span>\n        showTrashBtn<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        liked<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// ------------ 처음 코드 -------------</span>\n  <span class=\"token function-variable function\">onClickCommentHeartBtn</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> userComments <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      comment<span class=\"token punctuation\">.</span>liked <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>comment<span class=\"token punctuation\">.</span>liked<span class=\"token punctuation\">;</span>\n      userComments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> comment<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        userComments<span class=\"token operator\">:</span> userComments<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// ------------ 수정한 코드 -------------</span>\n<span class=\"token function-variable function\">onClickCommentHeartBtn</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">id</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    userComments<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment</span> <span class=\"token operator\">=></span>\n      comment<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> id <span class=\"token operator\">?</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>comment<span class=\"token punctuation\">,</span> liked<span class=\"token operator\">:</span> <span class=\"token operator\">!</span>comment<span class=\"token punctuation\">.</span>liked <span class=\"token punctuation\">}</span> <span class=\"token operator\">:</span> comment\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">onClickDeleteBtn</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">clickedComment</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    userComments<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>userComments<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> user<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> clickedComment<span class=\"token punctuation\">.</span>id\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"[React] 인스타그램 따라만들기","date":"May 15, 2021"}}},"pageContext":{"slug":"/Projects/[React] 인스타그램/","previous":{"fields":{"slug":"/Struggle/[우분투] 우분투에서 와콤 세팅 삽질기록/"},"frontmatter":{"title":"[우분투] 우분투에서 와콤 세팅 삽질기록"}},"next":{"fields":{"slug":"/Algorithm/[LeetCode] 64. Minimum Path Sum - JS/"},"frontmatter":{"title":"[LeetCode] 64 Minimum Path Sum - JS"}}}},"staticQueryHashes":["2486386679","3128451518"]}