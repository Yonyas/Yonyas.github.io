{"componentChunkName":"component---src-templates-blog-post-js","path":"/Projects/인스타그램/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"d2fddf4a-fe70-57a4-bc21-81ed89523fc6","excerpt":"목차 1. aside 부분 돔 구현 2. 댓글 추가, 삭제 및 좋아요 기능 3. 게시글에 좋아요 누르기 4. nav에 아이디 검색 기능 5. 후기  4월 12일부터 위코드 부트캠프 생활을 시작했다 ! 바닐라 자바스크립트로 인스타그램 로그인페이지와 메인페이지를 만들었다. 다음주 3주차에는 인스타그램을 리액트를 이용해서 다시 구현해볼 것이다. 구현한 기능 댓글 추가 삭제 및 각각 댓글의 좋아요 누르기 아이디 검색 시 팝업창을 띄워서 현재 페이지에 보이는 아이디만 보이기 신경 쓴 부분 오른쪽 aside…","html":"<blockquote>\n<h3 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>목차</strong></h3>\n<p><a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%80%EA%B7%B8%EB%9E%A81\">1. aside 부분 돔 구현</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%80%EA%B7%B8%EB%9E%A82\">2. 댓글 추가, 삭제 및 좋아요 기능</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%80%EA%B7%B8%EB%9E%A83\">3. 게시글에 좋아요 누르기</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%80%EA%B7%B8%EB%9E%A84\">4. nav에 아이디 검색 기능</a><br>\n<a href=\"#%EC%9D%B8%EC%8A%A4%ED%83%80%EA%B7%B8%EB%9E%A85\">5. 후기</a></p>\n</blockquote>\n<p><img src=\"https://images.velog.io/images/yonyas/post/df2efd38-9658-47fc-9159-655ad7ef9f17/full.png\"></p>\n<p>4월 12일부터 위코드 부트캠프 생활을 시작했다 !<br>\n바닐라 자바스크립트로 인스타그램 로그인페이지와 메인페이지를 만들었다.<br>\n다음주 3주차에는 인스타그램을 리액트를 이용해서 다시 구현해볼 것이다.</p>\n<h3 id=\"구현한-기능\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84%ED%95%9C-%EA%B8%B0%EB%8A%A5\" aria-label=\"구현한 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>구현한 기능</strong></h3>\n<ol>\n<li>댓글 추가 삭제 및 각각 댓글의 좋아요 누르기</li>\n<li>아이디 검색 시 팝업창을 띄워서 현재 페이지에 보이는 아이디만 보이기</li>\n</ol>\n<h3 id=\"신경-쓴-부분\" style=\"position:relative;\"><a href=\"#%EC%8B%A0%EA%B2%BD-%EC%93%B4-%EB%B6%80%EB%B6%84\" aria-label=\"신경 쓴 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>신경 쓴 부분</strong></h3>\n<p>오른쪽 aside부분 프로필 리스트 추가 시 객체들의 배열을 만들고 배열을 반복하면서 돔을 그려나갔다. API를 받아와서 처리할 때 객체와 배열 사용에 익숙해져야 해서 하드코딩을 지양하고 유지보수, 확장성이 용이하게 만들려고 노력했다 !</p>\n<h2 id='인스타그램1'>1. aside 부분 돔 구현</h2>\n<p><img src=\"https://images.velog.io/images/yonyas/post/3ee59d3e-f1da-4713-8150-2c59097fb3b4/aside.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> users <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'jiyon'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/hao.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'Shaman_king'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/hao2.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'iu'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/iu.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'Jeon_dongseok'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/dongseok.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'kakashi'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/kakashi.png'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'gaara'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/gaara.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'hyoshin'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/hyoshin.jpeg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'lock-li'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/lock-li.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> id<span class=\"token operator\">:</span> <span class=\"token string\">'naruto'</span><span class=\"token punctuation\">,</span> img<span class=\"token operator\">:</span> <span class=\"token string\">'./images/naruto.jpg'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> userIds <span class=\"token operator\">=</span> users<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pre<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> userImgs <span class=\"token operator\">=</span> users<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>pre<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>각각 id와 img를 받아올 users객체를 선언했다.</li>\n<li>id만의 배열과 img만의 배열을 만들기 위해 고민하다가 머릿속 어딘가에서 reduce가 갑자기 떠올라서 reduce메서드를 사용해봤다. 아이디 검색기능 구현 시 사용했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createProfileLists</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dom<span class=\"token punctuation\">,</span> imgsrc<span class=\"token punctuation\">,</span> profileName<span class=\"token punctuation\">,</span> postedTime</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> asideMain <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>dom<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> .asideMain</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> imgAndId <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> asideProfileImg <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> idAndTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> profileId <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> postTime <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n\n  imgAndId<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'imgAndId'</span><span class=\"token punctuation\">)</span>\n  asideProfileImg<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'asideProfileImg'</span><span class=\"token punctuation\">)</span>\n  idAndTime<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'idAndTime'</span><span class=\"token punctuation\">)</span>\n  profileId<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profileId'</span><span class=\"token punctuation\">)</span>\n  postTime<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'postTime'</span><span class=\"token punctuation\">)</span>\n  postTime<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'grey'</span><span class=\"token punctuation\">)</span>\n\n  idAndTime<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>profileId<span class=\"token punctuation\">)</span>\n  idAndTime<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>postTime<span class=\"token punctuation\">)</span>\n  imgAndId<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>asideProfileImg<span class=\"token punctuation\">)</span>\n  imgAndId<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>idAndTime<span class=\"token punctuation\">)</span>\n  asideMain<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>imgAndId<span class=\"token punctuation\">)</span>\n\n  profileId<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> profileName\n  postTime<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> postedTime\n  asideProfileImg<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> imgsrc<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nusers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">createProfileLists</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.story'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token string\">'20분 전'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nusers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">createProfileLists</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.recommend'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token string\">'000님이 팔로우합니다.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>forEach 메소드로 users 객체를 돌면서 createProfileLists함수를 실행시켜서 돔을 그려냈다.</p>\n<br>\n</li>\n</ul>\n<h2 id='인스타그램2'>2. 댓글 추가, 삭제 및 좋아요 기능</h2>\n<p><img src=\"https://images.velog.io/images/yonyas/post/5e1b2182-8492-44cc-ae86-d1195b0e4fed/comment.png\">\n<img src=\"https://images.velog.io/images/yonyas/post/b01e1436-eee7-4f50-98d7-f3612e3a91b4/like.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">postCommentBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">clickCommentBtn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\npostCommentInput<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyup'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  postCommentInput<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n    <span class=\"token operator\">?</span> postCommentBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">:</span> postCommentBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>keyCode <span class=\"token operator\">!==</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clickCommentBtn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>댓글을 입력하고 게시 버튼을 누르거나 엔터버튼을 누르면 clickCommentBtn 함수를 실행시켰다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickCommentBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>postCommentInput<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> commentWrap <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> commenter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> comment <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> commentDeleteBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> commentLikesBtn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span>\n\n  commentWrap<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commentWrap'</span><span class=\"token punctuation\">)</span>\n  commenter<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commenter'</span><span class=\"token punctuation\">)</span>\n  comment<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">)</span>\n  commentDeleteBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commentBtn'</span><span class=\"token punctuation\">)</span>\n  commentDeleteBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commentDeleteBtn'</span><span class=\"token punctuation\">)</span>\n  commentLikesBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commentBtn'</span><span class=\"token punctuation\">)</span>\n  commentLikesBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'commentLikesBtn'</span><span class=\"token punctuation\">)</span>\n\n  commentWrap<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commenter<span class=\"token punctuation\">)</span>\n  commentWrap<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>comment<span class=\"token punctuation\">)</span>\n  commentWrap<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commentDeleteBtn<span class=\"token punctuation\">)</span>\n  commentWrap<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commentLikesBtn<span class=\"token punctuation\">)</span>\n  articleComment<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>commentWrap<span class=\"token punctuation\">)</span>\n\n  commentDeleteBtn<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;i class=\"far fa-trash-alt\">&lt;/i></span><span class=\"token template-punctuation string\">`</span></span>\n  commentLikesBtn<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;i class=\"emptyHeart far fa-heart\">&lt;/i>\n&lt;i class=\"redHeart fas fa-heart red hide\">&lt;/i></span><span class=\"token template-punctuation string\">`</span></span>\n  commenter<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Shaman_king'</span>\n  comment<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> postCommentInput<span class=\"token punctuation\">.</span>value\n\n  postCommentInput<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  commentTime<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'방금'</span>\n  postCommentBtn<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span>\n  postCommentInput<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n\n  commentLikesBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> emptyHeart <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.emptyHeart'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> redHeart <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.redHeart'</span><span class=\"token punctuation\">)</span>\n    emptyHeart<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hide'</span><span class=\"token punctuation\">)</span>\n    redHeart<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hide'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> commentDeleteBtns <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.commentDeleteBtn'</span><span class=\"token punctuation\">)</span>\n  commentDeleteBtns<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">commentDeleteBtn</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    commentDeleteBtn<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      commentDeleteBtn<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>fontawsome에서 하트모양을 가져왔다. 속이 빈 하트와 속이 찬 하트를 가져와서 좋아요를 누를 때마다 토글이 되게 하였다.</li>\n<li>돔을 만들면서 이벤트리스너를 붙여주었다.</li>\n</ul>\n<h2 id='인스타그램3'>3. 게시글에 좋아요 누르기</h2>\n<p><img src=\"https://images.velog.io/images/yonyas/post/870661ec-1bc6-48c3-b67e-52310a7eb0f4/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202021-04-24%2014-41-42.png\">\n<img src=\"https://images.velog.io/images/yonyas/post/ca10fee8-568e-4c44-9dec-22bb8c43395d/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202021-04-24%2014-41-53.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">pushLike<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pushLike<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundPosition<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'-156'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pushLike<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundPosition <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-130px -478px</span><span class=\"token template-punctuation string\">`</span></span>\n    likeNum<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>likeNum<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    pushLike<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundPosition <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">-156px -478px</span><span class=\"token template-punctuation string\">`</span></span>\n    likeNum<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>likeNum<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>이 하트는 스프라이트 이미지로 구현했기 때문에 좋아요를 누를 때마다 backgroundPosition이 변경되도록 하였다.</li>\n</ul>\n<h2 id='인스타그램4'>4. nav에 아이디 검색 기능</h2>\n<p><img src=\"https://images.velog.io/images/yonyas/post/7dfa1c38-0076-4f6f-92b8-98e1a7bfcc34/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202021-04-24%2014-46-05.png\">\n<img src=\"https://images.velog.io/images/yonyas/post/873e3df7-e123-411f-a5b9-160b86f11411/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7,%202021-04-24%2014-46-19.png\"></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createSearchLists</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">searchInputValue</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>searchPopup<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> searchedList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> profileImg <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> idAndNickname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> userid <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> nickname <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span>\n\n  userid<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> searchInputValue\n  <span class=\"token keyword\">let</span> userIdIndex <span class=\"token operator\">=</span> userIds<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>searchInputValue<span class=\"token punctuation\">)</span>\n  profileImg<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">[</span>userIdIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ----------------------------------------</span>\n  <span class=\"token comment\">// ex) iu의 위치를 받아서 그 위치의 이미지를 넣어줬다.</span>\n  <span class=\"token comment\">// setAttribute를 처음 사용해보았다.</span>\n  <span class=\"token comment\">// ----------------------------------------</span>\n\n  idAndNickname<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>userid<span class=\"token punctuation\">)</span>\n  idAndNickname<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">)</span>\n  searchedList<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>profileImg<span class=\"token punctuation\">)</span>\n  searchedList<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>idAndNickname<span class=\"token punctuation\">)</span>\n  searchPopup<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>searchedList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nnavSearch<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    searchPopup<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> userIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">createSearchLists</span><span class=\"token punctuation\">(</span>userIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        searchPopup<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ------------------------------------------------</span>\n    <span class=\"token comment\">// forEach 사용시 break 가 되지 않아서 for loop을 돌렸다.</span>\n    <span class=\"token comment\">// ------------------------------------------------</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nnavSearch<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blur'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  searchPopup<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>String.startsWith 메소드로 iu의 i만 쳐도 나오게끔 했다.</li>\n</ul>\n<h2 id='인스타그램5'>5. 후기</h2>\n착착 진행되는 부분도 있었지만 막히는 부분들도 많았다. 그래도 로직 생각하고 구현하는게 재밌었다. 마지막에는 조금 조급해 지기도 했다. 취업하면 회사에 도움이 되는 개발자가 되어야 하는데 .. 내가 도움이 될 수 있을까 등등 생각이 들었다.<br>\n정확히 빠르게 꼼꼼히 버그없이 해보자 아자아자 !\n<br>\n<br>\n로직은 다 구현이 된 상태니 아마 다음주 리액트로 구현하는 것은 금방 할 수 있지 않을까?!! (허튼 생각이 아니길!)","frontmatter":{"title":"[JS] 인스타그램 따라만들기","date":"April 24, 2021"}}},"pageContext":{"slug":"/Projects/인스타그램/","previous":{"fields":{"slug":"/CSS/[CSS] float에 대해/"},"frontmatter":{"title":"[CSS] float에 대해"}},"next":{"fields":{"slug":"/삽질기/[우분투] 우분투에서 와콤 세팅 삽질기록/"},"frontmatter":{"title":"[우분투] 우분투에서 와콤 세팅 삽질기록"}}}},"staticQueryHashes":["2486386679","3128451518"]}