{"componentChunkName":"component---src-templates-blog-post-js","path":"/Lecture/코드스피츠 Programming 1강/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"63f4984d-82dc-541c-a4f5-207bd095c101","excerpt":"사람의 머리는 똑똑하지 않다. 기억할 수 있는 저장수의 길이는 최대 7줄. 그래서 스코프는 좁게 변수 라이프사이클은 짧게 유지해야 한다. 또한 바로 어려운 for문을 짤 수 없다. 숟가락 얹기 재귀 -> 꼬리물기 최적화 재귀 -> for문으로 기게적 번역 단계를 거쳐서 어려운 for문도 짤 수 있게 될 것이다. 아래는 1~1…","html":"<p>사람의 머리는 똑똑하지 않다. 기억할 수 있는 저장수의 길이는 최대 7줄.<br>\n그래서 스코프는 좁게 변수 라이프사이클은 짧게 유지해야 한다.</p>\n<p>또한 바로 어려운 for문을 짤 수 없다.<br>\n<strong>숟가락 얹기 재귀 -> 꼬리물기 최적화 재귀 -> for문으로 기게적 번역</strong> 단계를 거쳐서 어려운 for문도 짤 수 있게 될 것이다.</p>\n<p>아래는 1~10까지의 합을 구하는 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//숟가락 얹기</span>\n<span class=\"token number\">1.</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> v <span class=\"token operator\">+</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//꼬리물기 최적화</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">const</span> _sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> ⇒ v <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token function\">_sum</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> acc<span class=\"token operator\">+</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> acc<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1.</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token function\">_sum</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 사용자는 v값만 넣으면 된다.</span>\n\n<span class=\"token comment\">//3. for문 기계적 번역</span>\n<span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 상수</span>\n<span class=\"token keyword\">let</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 저장소</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> acc <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span> <span class=\"token comment\">// i 는 제어변수 중 **카운터**</span>\nacc <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//4. 결과적으로 짜야하는 함수</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">let</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> acc <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span>\n\tacc <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> acc\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"변수의-종류-설명\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%98-%EC%A2%85%EB%A5%98-%EC%84%A4%EB%AA%85\" aria-label=\"변수의 종류 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수의 종류 설명</h2>\n<p><strong>상수</strong> : 특정 컨텍스트(해결하려는 문제)하에서 미리 주어진 값, 함수 입장에서 인자는 상수<br>\n<strong>저장소</strong> : 스토리지(알고리즘이 진행되면서 결과값을 누적할(저장할)필요가 있는 변수<br>\n<strong>카운터</strong> : 몇 번 도는지 갯수 세기</p>\n<h2 id=\"스택오버플로어에-걸리지-않게-스택을-쌓지-않는-방법\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%83%9D%EC%98%A4%EB%B2%84%ED%94%8C%EB%A1%9C%EC%96%B4%EC%97%90-%EA%B1%B8%EB%A6%AC%EC%A7%80-%EC%95%8A%EA%B2%8C-%EC%8A%A4%ED%83%9D%EC%9D%84-%EC%8C%93%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"스택오버플로어에 걸리지 않게 스택을 쌓지 않는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스택오버플로어에 걸리지 않게 스택을 쌓지 않는 방법.</h2>\n<p>스택오버플로어의 기준은 브라우저 엔진마다 컴퓨터마다 등등 너무 다양하다.\n문제는 위의 제 1 코드에서 sum(1000000) 정도 돌리면 스택오버플로어에 걸린다.<br>\n틀린 코드가 아님에도 엔진이 돌다가 ‘어? 왜이렇게 많이 돌아? 이거이거 에러같은데 그만 돌아야겠네~‘하고 스택오버플로어를 내뿜는다.<br>\n해결은? <strong>for문으로 짜야 한다.</strong></p>\n<h3 id=\"해보자\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EB%B3%B4%EC%9E%90\" aria-label=\"해보자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해보자</h3>\n<p>함수의 반환값의 복귀점을 지정해주면 되는데 js 는 안된다. 함수가 끝나면 시작한 그 지점으로 복귀한다. 복귀점 지정이 따로 안된다.</p>\n<p>위의 1코드는 sum(v-1)을 돌고 <code class=\"language-text\">v +</code> 을 해줘야 하기 때문에 즉 할일이 남아있기 때문에 스택을 제거할 수 없다.<br>\n2코드는 그래서 인자로 넣어줬다. 돌아와서 할일이 없게끔.</p>\n<p><strong>4코드가 궁극적으로 짜야 하는 코드.</strong> 이렇게 바로 짤 수 없다. 힘들다. 못한다. 그래서 1,2,3,4 순서를 거치는 것.<br>\nfor문을 짜면 필수적으로 저장소가 등장한다.\n위의 acc 저장소의 스코프는 4줄이다. 재귀는 고작 한줄.\n사람이 기억할 수 있는 저장소의 길이는 최대 7줄.\n그래서 for문이 어렵다. for문은 무조건 저장소가 나오고 라이프사이클이 길다.</p>\n<p>재귀로 짜고 for문으로 돌리는 연습을 해보자</p>\n<h2 id=\"과제-1차원배열의-합-재귀-꼬리재귀-for문-세개-코드-작성하기\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C-1%EC%B0%A8%EC%9B%90%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%95%A9-%EC%9E%AC%EA%B7%80-%EA%BC%AC%EB%A6%AC%EC%9E%AC%EA%B7%80-for%EB%AC%B8-%EC%84%B8%EA%B0%9C-%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"과제 1차원배열의 합 재귀 꼬리재귀 for문 세개 코드 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제: 1차원배열의 합 재귀, 꼬리재귀, for문 세개 코드 작성하기</h2>\n<h4 id=\"내가-짠-코드\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EA%B0%80-%EC%A7%A0-%EC%BD%94%EB%93%9C\" aria-label=\"내가 짠 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내가 짠 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//재귀</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//꼬리물기</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">taleSum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> acc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  i <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token function\">taleSum</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> acc <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> acc <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">//for문</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">arraySum</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> acc <span class=\"token operator\">+=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> acc\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"학생의-코드\" style=\"position:relative;\"><a href=\"#%ED%95%99%EC%83%9D%EC%9D%98-%EC%BD%94%EB%93%9C\" aria-label=\"학생의 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>학생의 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">recursive</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> list<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> acc\n  <span class=\"token keyword\">return</span> <span class=\"token function\">recursive</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> acc <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>학생 코드리뷰 내용</p>\n<h4 id=\"오류와-실패\" style=\"position:relative;\"><a href=\"#%EC%98%A4%EB%A5%98%EC%99%80-%EC%8B%A4%ED%8C%A8\" aria-label=\"오류와 실패 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오류와 실패</h4>\n<p>오류는 있는데 실패하지 않는 경우 : 내부에 있는 함수나 기능이 *내결함성을 갖는 경우</p>\n<p>*내결함성 : 오류가 발생했을 때 버티는 경우, 대부분 런타임에러가 안생기는 대신 컨텍스트 에러가 생긴다. 프로그램이 죽지는 않지만 결과가 엉뚱하게 나온다. 안정성은 있지만 신뢰성이 제거된다. 안정성과 신뢰성은 trade-off 관계.\n무조건 신뢰성을 높여라. 안정성은 시니어가 된다면 신경써라.</p>\n<p>프로그램에서 무서운 것은 컨텍스트 에러. 오류를 감추는 내결함성을 도입할 때는 신중해야 한다. 일반적인 경우 내결함성 도입은 무조건 좋지 않다. 내결합성을 갖추지 않고 오류를 표출하게끔 바꿔줘야 한다.</p>\n<p>아래처럼 수정</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">recursive</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">list<span class=\"token punctuation\">,</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> acc <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">invalid list </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>list<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> list<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string\">'number'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">invalid element </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>index<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>list<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">recurseve</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> acc <span class=\"token operator\">+</span> list<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 결정을 사용자가 해야 함.</span>\n<span class=\"token comment\">// throw 대신 return 0 등으로 쓰는 것은 사용자의 권리를 뺏는 것.</span>\n<span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\tresult <span class=\"token operator\">=</span> <span class=\"token function\">recursive</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"강의링크\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%98%EB%A7%81%ED%81%AC\" aria-label=\"강의링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>강의링크</h2>\n<p><a href=\"https://youtu.be/0lAsf19iE2g\">https://youtu.be/0lAsf19iE2g</a></p>","frontmatter":{"title":"코드스피츠 Programming101 - 1강","date":"July 15, 2021"}}},"pageContext":{"slug":"/Lecture/코드스피츠 Programming 1강/","previous":{"fields":{"slug":"/npm/npm install `--force` and `--legacy-peer-deps` 차이점/"},"frontmatter":{"title":"npm install `--force` and `--legacy-peer-deps` 차이점"}},"next":{"fields":{"slug":"/JavaScript/sort()에 대해/"},"frontmatter":{"title":"sort()에 대해"}}}},"staticQueryHashes":["2486386679","3128451518"]}