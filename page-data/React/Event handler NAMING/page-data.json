{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/Event handler NAMING/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"db906357-e74e-5a0d-b2a1-ebd8f9775f12","excerpt":"handleClickButton 으로 할 지 handleButtonClick 으로 할 지 고민하다가 찾아보게 된 이벤트핸들러 네이밍에 관한 글입니다. Props   처럼 접두사   을 붙인다. 내장된 이벤트 핸들러 컨벤션도 이와 같은 컨벤션이다. 이렇게 컨벤션을 맞춤으로써 이 props가 내장된 이벤트 핸들러 기능을 포함하여 동작한다고 선언하는 의미도 있다. Function names…","html":"<blockquote>\n<p>handleClickButton 으로 할 지 handleButtonClick 으로 할 지 고민하다가 찾아보게 된 이벤트핸들러 네이밍에 관한 글입니다.</p>\n</blockquote>\n<h2 id=\"props\" style=\"position:relative;\"><a href=\"#props\" aria-label=\"props permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Props</h2>\n<p><code class=\"language-text\">onClick</code>  처럼 접두사 <code class=\"language-text\">on</code>  을 붙인다. 내장된 이벤트 핸들러 컨벤션도 이와 같은 컨벤션이다. 이렇게 컨벤션을 맞춤으로써 이 props가 내장된 이벤트 핸들러 기능을 포함하여 동작한다고 선언하는 의미도 있다.</p>\n<h2 id=\"function-names\" style=\"position:relative;\"><a href=\"#function-names\" aria-label=\"function names permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Function names</h2>\n<p><code class=\"language-text\">handleClick</code>  처럼 접두사에 <code class=\"language-text\">handle</code> 을 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>MyComponent onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p><code class=\"language-text\">on</code> 은 실제 이벤트가 하는 기능에 쓰이고, <code class=\"language-text\">handle</code> 은 이벤트가 트리거됐을 때 어떤 것이 호출될 지 말해준다.</p>\n<p>alert 창에서 버튼을 클릭하면 alert 창이 없어지게 되는데 이 동작을 <code class=\"language-text\">handleDismiss</code>  라고 네이밍 하고 싶을 수도 있다. 하지만 실제 행동(클릭)과 연관짓는 것이 더 좋다고 생각한다. <code class=\"language-text\">handleDismiss</code>  처럼 행동의 의미를 넣으면 다른 이벤트 핸들러와 헷갈릴 가능성이 크다.</p>\n<h2 id=\"더-복잡한-경우\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EA%B2%BD%EC%9A%B0\" aria-label=\"더 복잡한 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 복잡한 경우</h2>\n<p>alerts와 form이 있을 경우 이렇게 네이밍을 한다.\n명사 <code class=\"language-text\">Alert</code> + 동사<code class=\"language-text\">Form</code> 를 형태이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">onAlertClick <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> handleAlertClick <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nonAlertHover <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> handleAlertHover <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nonFormSubmit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> handleFormSubmit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>handleClickAlert, handleHoverAlert 처럼 동사 + 명사보다 위 코드처럼 쓰는게 통일성 있어서 보기 좋다.</p>\n<h2 id=\"컴포넌트-쪼개기\" style=\"position:relative;\"><a href=\"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%AA%BC%EA%B0%9C%EA%B8%B0\" aria-label=\"컴포넌트 쪼개기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컴포넌트 쪼개기</h2>\n<p>네이밍과 약간 별개의 이야기지만 컴포넌트를 쪼개는 이야기를 해보겠다.\n<code class=\"language-text\">formJs</code> 에 다음과 같은 두가지 핸들러가 있다고 하자.</p>\n<ul>\n<li>onRegisterationSubmit</li>\n<li>onLoginSubmit</li>\n</ul>\n<p>이럴 경우 <code class=\"language-text\">formJs</code> 컴포넌트를 두개로 쪼개고 두 핸들러 모두<code class=\"language-text\">onSubmit</code> 으로 하는 것을 추천한다.</p>\n<h2 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h2 id=\"내장된-핸들러-이름을-사용할-경우-주의할-점\" style=\"position:relative;\"><a href=\"#%EB%82%B4%EC%9E%A5%EB%90%9C-%ED%95%B8%EB%93%A4%EB%9F%AC-%EC%9D%B4%EB%A6%84%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%A0-%EA%B2%BD%EC%9A%B0-%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90\" aria-label=\"내장된 핸들러 이름을 사용할 경우 주의할 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내장된 핸들러 이름을 사용할 경우 주의할 점</h2>\n<p>첫번째 아이템 Props와 연관되는 내용이다.\n<code class=\"language-text\">onClick</code> 이나 <code class=\"language-text\">onSubmit</code> 같은 내장된 이벤트핸들러 이름을 사용할 경우 주의해야 한다.</p>\n<p>MyComponent가 받는 <code class=\"language-text\">props</code> 에 <code class=\"language-text\">onClick</code> 이 포함되어 있다고 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">MyComponent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>onClick이 필요한 div입니다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자식 요소에서 이벤트버블링이 발생하면 원치 않는 경우도 클릭이 되어버린다. 이런 경우가 있어서 주의하도록 하자 !</p>\n<h2 id=\"출처\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처</h2>\n<p><a href=\"https://jaketrent.com/post/naming-event-handlers-react\">https://jaketrent.com/post/naming-event-handlers-react</a></p>","frontmatter":{"title":"[REACT] Event handler NAMING","date":"April 22, 2022"}}},"pageContext":{"slug":"/React/Event handler NAMING/","previous":{"fields":{"slug":"/TypeScript/Object Types/"},"frontmatter":{"title":"[TypeScript] Object Types"}},"next":{"fields":{"slug":"/TypeScript/[Effective TS] item 14/"},"frontmatter":{"title":"[Book] 이펙티브 타입스크립트 : 타입 연산과 제네릭 사용으로 반복 줄이기"}}}},"staticQueryHashes":["2486386679","3128451518"]}