{"componentChunkName":"component---src-templates-blog-post-js","path":"/etc/TypeScript eslintrc.json 살펴보기/","result":{"data":{"site":{"siteMetadata":{"title":"Yonyas 블로그","author":"Jiyon Lee","siteUrl":"https://yonyas.github.io","comment":{"disqusShortName":"","utterances":"Yonyas/blog-comments"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"1ec46344-9a5a-58ea-81a8-10177362c387","excerpt":"plugins @typesript-eslint : TS를 ESLint에서 사용할 수 있도록 ESTree-compatible form으로 변환한다. jsdoc/check-alignment : /** */ 의 블록주석을 정렬을 맞게 수정한다. no-null : null 대신 undefined를 사용한다. import : package.json에 선언되지 않은 외부패키지 사용을 금지한다. env…","html":"<h2 id=\"plugins\" style=\"position:relative;\"><a href=\"#plugins\" aria-label=\"plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>plugins</h2>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n\t<span class=\"token string\">\"@typescript-eslint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jsdoc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"no-null\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"import\"</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// eslint-plugin-jsdoc</span>\n        <span class=\"token property\">\"jsdoc/check-alignment\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// eslint-plugin-no-null</span>\n        <span class=\"token property\">\"no-null/no-null\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// eslint-plugin-import</span>\n        <span class=\"token property\">\"import/no-extraneous-dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"optionalDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ol>\n<li>@typesript-eslint : TS를 ESLint에서 사용할 수 있도록 ESTree-compatible form으로 변환한다.</li>\n<li>jsdoc/check-alignment : /** */ 의 블록주석을 정렬을 맞게 수정한다.</li>\n<li>no-null : null 대신 undefined를 사용한다.</li>\n<li>import : package.json에 선언되지 않은 외부패키지 사용을 금지한다.</li>\n</ol>\n<h2 id=\"env\" style=\"position:relative;\"><a href=\"#env\" aria-label=\"env permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>env</h2>\n<p>어느 환경에서 스크립트가 동작할지 설정한다. 그 환경에 맞는 전역변수를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"> <span class=\"token property\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"browser\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"node\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"es6\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"parseroptions\" style=\"position:relative;\"><a href=\"#parseroptions\" aria-label=\"parseroptions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>parserOptions</h2>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// TS가 명시적으로 지원되는 버전이 아니라면 error를 내는데 이것을 막는다.</span>\n        <span class=\"token property\">\"warnOnUnsupportedTypeScriptVersion\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">//eslint는 기본적으로 ECMAScript 5 를 지원하기 떄문에 version: 6 명시</span>\n        <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token comment\">// sourceType은 parser의 export 형태를 설정</span>\n        <span class=\"token comment\">// default 는 script, ECMAScript modules 이면 module</span>\n        <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"rules\" style=\"position:relative;\"><a href=\"#rules\" aria-label=\"rules permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rules</h2>\n<p>(추가중)</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"> <span class=\"token property\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* overload member들을 묶어준다.\n    **from**\n    type Foo = {\n        foo(s: string): void;\n        foo(n: number): void;\n        bar(): void;\n        foo(sn: string | number): void;\n    };\n    **to**\n    type Foo = {\n        foo(s: string): void;\n        foo(n: number): void;\n        foo(sn: string | number): void;\n        bar(): void;\n    };\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/adjacent-overload-signatures\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    **stroustrup**\n    if (foo) {\n        bar();\n    }          &lt;-- enter\n    else {\n        baz();\n    }\n    */</span>\n    <span class=\"token property\">\"brace-style\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/brace-style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"stroustrup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"allowSingleLine\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// enforce using interfaces for object type definitions.</span>\n    <span class=\"token property\">\"@typescript-eslint/consistent-type-definitions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"interface\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/* there are two kind of type assertion 1. as, 2. angle-braket\n    ** as **\n    let x = 'hi' as const;\n\n    ** angle-bracket **\n    let x = &lt;const>'hi';\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/consistent-type-assertions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"assertionStyle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"as\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    no-duplicate-imports rule\n    ** from **\n    import { merge } from 'module';\n    import { find } from 'module';\n\n    ** to **\n    import { merge, find } from 'module';\n    */</span>\n    <span class=\"token property\">\"no-duplicate-imports\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/no-duplicate-imports\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    추론될 수 있는 타입에 굳이 타입정의 하지 말기\n    ** from **\n    const a: number = 10;\n\n    ** to **\n    const a = 10;\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/no-inferrable-types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">//변수에 this 할당 금지</span>\n    <span class=\"token property\">\"@typescript-eslint/no-this-alias\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">//n + 1; is not a syntax error, but it might be a typing mistake where a programmer meant an assignment statement n += 1; instead</span>\n    <span class=\"token property\">\"no-unused-expressions\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/no-unused-expressions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"allowTernary\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/* 인덱스가 읽기에만 쓰일 때 for문보다 of를 사용.\n    ** from **\n    for (let i = 0; i &lt; arr.length; i++) {\n        console.log(arr[i]);\n    }\n\n    ** to **\n    for (const x of arr) {\n        console.log(x);\n    }\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/prefer-for-of\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">//TS v1.5 이전에는 internal-module, 이후에는 namespace로 변경되었다. namespace keyword 사용 강제해서 헷갈리지 않도록 함</span>\n    <span class=\"token property\">\"@typescript-eslint/prefer-namespace-keyword\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">//use double quote</span>\n    <span class=\"token property\">\"quotes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/quotes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"double\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">\"avoidEscape\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token property\">\"allowTemplateLiterals\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">//require semicolons instead of ASI</span>\n    <span class=\"token property\">\"semi\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/semi\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    함수 괄호 전에 공백 주기\n    ** from **\n    function withoutSpace(x) {\n        // ...\n    }\n\n    ** to **\n    function withSpace (x) {\n        // ...\n    }\n    */</span>\n    <span class=\"token property\">\"space-before-function-paren\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@typescript-eslint/space-before-function-paren\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"asyncArrow\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"anonymous\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"always\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"named\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"never\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// /// 대신 import 사용</span>\n    <span class=\"token property\">\"@typescript-eslint/triple-slash-reference\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    타입 지정 문자 전 띄어쓰기\n    ** from **\n    let foo:string = \"bar\";\n    let foo :string = \"bar\";\n    let foo : string = \"bar\";\n\n    ** to **\n    let foo: string = \"bar\";\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/type-annotation-spacing\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">/*\n    하나로 통합될 수 있는 타입지정 경고\n    ** from **\n    function f(x: number): void;\n    function f(x: string): void;\n\n    ** to **\n    function f(x: number | string): void;\n    */</span>\n    <span class=\"token property\">\"@typescript-eslint/unified-signatures\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2 id=\"eslint-적용해보는-사이트\" style=\"position:relative;\"><a href=\"#eslint-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EB%8A%94-%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"eslint 적용해보는 사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>eslint 적용해보는 사이트</h2>\n<p><a href=\"https://eslint.org/demo#eyJ0ZXh0IjoidmFyIGZvbyA9IGJhcjtcbmNvbnN0IGEgPSAwO1xuYSA9IG51bGxcbiIsIm9wdGlvbnMiOnsicGFyc2VyT3B0aW9ucyI6eyJlY21hVmVyc2lvbiI6MTIsInNvdXJjZVR5cGUiOiJzY3JpcHQiLCJlY21hRmVhdHVyZXMiOnt9fSwicnVsZXMiOnsiY29uc3RydWN0b3Itc3VwZXIiOjIsImZvci1kaXJlY3Rpb24iOjIsImdldHRlci1yZXR1cm4iOjIsIm5vLWFzeW5jLXByb21pc2UtZXhlY3V0b3IiOjIsIm5vLWNhc2UtZGVjbGFyYXRpb25zIjoyLCJuby1jbGFzcy1hc3NpZ24iOjIsIm5vLWNvbXBhcmUtbmVnLXplcm8iOjIsIm5vLWNvbmQtYXNzaWduIjoyLCJuby1jb25zdC1hc3NpZ24iOjIsIm5vLWNvbnN0YW50LWNvbmRpdGlvbiI6Miwibm8tY29udHJvbC1yZWdleCI6Miwibm8tZGVidWdnZXIiOjIsIm5vLWRlbGV0ZS12YXIiOjIsIm5vLWR1cGUtYXJncyI6Miwibm8tZHVwZS1jbGFzcy1tZW1iZXJzIjoyLCJuby1kdXBlLWVsc2UtaWYiOjIsIm5vLWR1cGUta2V5cyI6Miwibm8tZHVwbGljYXRlLWNhc2UiOjIsIm5vLWVtcHR5IjoyLCJuby1lbXB0eS1jaGFyYWN0ZXItY2xhc3MiOjIsIm5vLWVtcHR5LXBhdHRlcm4iOjIsIm5vLWV4LWFzc2lnbiI6Miwibm8tZXh0cmEtYm9vbGVhbi1jYXN0IjoyLCJuby1leHRyYS1zZW1pIjoyLCJuby1mYWxsdGhyb3VnaCI6Miwibm8tZnVuYy1hc3NpZ24iOjIsIm5vLWdsb2JhbC1hc3NpZ24iOjIsIm5vLWltcG9ydC1hc3NpZ24iOjIsIm5vLWlubmVyLWRlY2xhcmF0aW9ucyI6Miwibm8taW52YWxpZC1yZWdleHAiOjIsIm5vLWlycmVndWxhci13aGl0ZXNwYWNlIjoyLCJuby1taXNsZWFkaW5nLWNoYXJhY3Rlci1jbGFzcyI6Miwibm8tbWl4ZWQtc3BhY2VzLWFuZC10YWJzIjoyLCJuby1uZXctc3ltYm9sIjoyLCJuby1vYmotY2FsbHMiOjIsIm5vLW9jdGFsIjoyLCJuby1wcm90b3R5cGUtYnVpbHRpbnMiOjIsIm5vLXJlZGVjbGFyZSI6Miwibm8tcmVnZXgtc3BhY2VzIjoyLCJuby1zZWxmLWFzc2lnbiI6Miwibm8tc2V0dGVyLXJldHVybiI6Miwibm8tc2hhZG93LXJlc3RyaWN0ZWQtbmFtZXMiOjIsIm5vLXNwYXJzZS1hcnJheXMiOjIsIm5vLXRoaXMtYmVmb3JlLXN1cGVyIjoyLCJuby11bmRlZiI6Miwibm8tdW5leHBlY3RlZC1tdWx0aWxpbmUiOjIsIm5vLXVucmVhY2hhYmxlIjoyLCJuby11bnNhZmUtZmluYWxseSI6Miwibm8tdW5zYWZlLW5lZ2F0aW9uIjoyLCJuby11bnVzZWQtbGFiZWxzIjoyLCJuby11bnVzZWQtdmFycyI6Miwibm8tdXNlbGVzcy1jYXRjaCI6Miwibm8tdXNlbGVzcy1lc2NhcGUiOjIsIm5vLXdpdGgiOjIsInJlcXVpcmUteWllbGQiOjIsInVzZS1pc25hbiI6MiwidmFsaWQtdHlwZW9mIjoyfSwiZW52Ijp7fX19\">ESLint Demo - ESLint - Pluggable JavaScript linter</a></p>\n<h2 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h2>\n<ol>\n<li><a href=\"https://eslint.org/\">ESLint - Pluggable JavaScript linter</a></li>\n<li><a href=\"https://www.npmjs.com/package/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-check-alignment\">eslint-plugin-jsdoc - npm</a></li>\n<li><a href=\"https://www.npmjs.com/package/eslint-plugin-no-null\">eslint-plugin-no-null - npm</a></li>\n<li><a href=\"https://www.npmjs.com/package/eslint-plugin-import\">eslint-plugin-import - npm</a></li>\n<li><a href=\"https://www.npmjs.com/package/@typescript-eslint/parser\">@typescript-eslint/parser - npm</a></li>\n</ol>","frontmatter":{"title":"Typescript eslintrc.json 살펴보기","date":"October 10, 2021"}}},"pageContext":{"slug":"/etc/TypeScript eslintrc.json 살펴보기/","previous":{"fields":{"slug":"/Thought/함께 자라기(애자일로 가는 길)/"},"frontmatter":{"title":"[함께 자라기(애자일로 가는 길)]을 읽고"}},"next":{"fields":{"slug":"/React/NEXT.js 에 대해/"},"frontmatter":{"title":"NEXT.js에 대해"}}}},"staticQueryHashes":["2486386679","3128451518"]}